// #######################################################################
// AUTOGENERATED FILE DON'T MODIFY.
// FILE IS AUTOGENERATED FROM Main.java TO RECOGNIZE THE REGEX a+x.
// #######################################################################
#include <iostream>
#include <string>
#include <fstream>
#include <sstream>
#include <chrono>
using namespace std::chrono;

bool traverse(std::string& str) {
  int result = -1;
  int idx = 0;
  int c;

  state3:
    if (str.size() <= idx) {
       std::cout << "Input ended before a match is found." << std::endl;
       return false;
    }
    c = (int)(str[idx++]);
    if (c == 97) goto state2;
    goto state1;
  state0:
    // final state
    result = idx;
    std::cout << "Found ending at:" << result << std::endl;
    return true;
  state2:
    if (str.size() <= idx) {
       std::cout << "Input ended before a match is found." << std::endl;
       return false;
    }
    c = (int)(str[idx++]);
    if (c == 97) goto state2;
    if (c == 120) goto state0;
    goto state1;
  state1:
    // reject state
    std::cout << "Failed to match:" << result << std::endl;
    return false;
}

int main(int argc, char* argv[]) {
  // load data
  std::string str(argv[1]);
  std::ifstream st(str);
  std::stringstream buf;
  buf << st.rdbuf();
  str = buf.str();

  auto start = high_resolution_clock::now();
  int matched = traverse(str);
  auto end = high_resolution_clock::now();
  std::cout << "Matching Result: " << matched << std::endl;
  auto dur = duration_cast<microseconds>(end - start);
  std::cout << "TimeToExecute: " << dur.count() << " microseconds." << std::endl;
}

